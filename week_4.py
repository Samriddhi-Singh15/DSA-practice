# -*- coding: utf-8 -*-
"""week_4

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15LEVUv7KedCqg4quyHrKFGHdvPmsVLZA
"""

#Longest common Prefix
def longestCommonPrefix(strs):
        s=strs[0]
        for i in range(1,len(strs)):
            current=strs[i]
            j=0
            while j<len(s) and j<len(current) and s[j]==current[j]:
              j+=1
            s=s[:j]
            if s=="":
              break
        return s

#3sum closet
    def fourSum(self, nums, target):
        nums.sort()
        n=len(nums)
        res=[]
        for i in range(n-3):
            if i>0 and nums[i]==nums[i-1]:
                continue
            if nums[i]+nums[i+1]+nums[i+2]+nums[i+3]>target:
                break
            if nums[i]+nums[n-1]+nums[n-2]+nums[n-3]<target:
                continue
            for j in range(i+1,n-2):
                if j>i+1 and nums[j]==nums[j-1]:
                    continue

                if nums[i]+nums[j]+nums[j+1]+nums[j+2]>target:
                    break
                if nums[i]+nums[j]+nums[n-1]+nums[n-2]<target:
                    continue
                left=j+1
                right=n-1

                while left<right:
                    total=nums[i]+nums[j]+nums[left]+nums[right]
                    if total==target:
                        res.append([nums[i],nums[j],nums[left],nums[right]])

                        while left<right and nums[left]==nums[left+1]:
                            left+=1
                        while left<right and nums[right]==nums[right-1]:
                            right-=1
                        left+=1
                        right-=1
                    elif total<target:
                        left+=1
                    else:
                        right-=1
        return res

#removeDuplicates
def removeDuplicates(nums):
  if not nums:
    return 0
  k=1
  for i in range(1,len(nums)):
    if nums[i]!=nums[i-1]:
      nums[k]=nums[i]
      k+=1
  return k

#removeElement
def removeElement(nums, val):
  if not nums:
    return 0
  k=0
  for i in range(len(nums)):
    if nums[i]==val:
      continue
    else:
      nums[k]=nums[i]
      k+=1
  return k

#searchInsert
def searchInsert(nums, target):
  result=0
  for i in range(len(nums)):
    if nums[i]==target:
      result= i
    elif nums[i]<target:
      result=i+1
    elif nums[i]<target<nums[i+1]:
      result= i+1
  return result


def searchInsert2(nums, target):#second way
  if target>nums[-1]:
    return len(nums)
  if target in nums:
    return nums.index(target)
  for i in range(len(nums)):
    if target<nums[i]:
      return i